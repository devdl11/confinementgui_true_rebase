[{"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\reportWebVitals.js":"1","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\App.js":"2","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\index.js":"3","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Login.js":"4","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\crypto.js":"5","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\ed-api.js":"6","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menu.js":"7","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Loading.js":"8","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\composants Menu\\BarreNav.js":"9","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\composants Menu\\MenuButton.js":"10","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\EDFiles.js":"11","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Storage.js":"12","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\DateRangeSelector.js":"13","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\MatiereFiles.js":"14","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\FileBarre.js":"15","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\DateContainerFiles.js":"16"},{"size":362,"mtime":1610017901950,"results":"17","hashOfConfig":"18"},{"size":1098,"mtime":1611244556172,"results":"19","hashOfConfig":"18"},{"size":500,"mtime":1610017901950,"results":"20","hashOfConfig":"18"},{"size":3258,"mtime":1611239609209,"results":"21","hashOfConfig":"18"},{"size":4587,"mtime":1611241583395,"results":"22","hashOfConfig":"18"},{"size":4605,"mtime":1612186735212,"results":"23","hashOfConfig":"18"},{"size":1356,"mtime":1611654345810,"results":"24","hashOfConfig":"18"},{"size":322,"mtime":1611233736277,"results":"25","hashOfConfig":"18"},{"size":1956,"mtime":1611251072894,"results":"26","hashOfConfig":"18"},{"size":607,"mtime":1611248017124,"results":"27","hashOfConfig":"18"},{"size":2702,"mtime":1612197152533,"results":"28","hashOfConfig":"18"},{"size":845,"mtime":1611587090396,"results":"29","hashOfConfig":"18"},{"size":1084,"mtime":1611260046985,"results":"30","hashOfConfig":"18"},{"size":1761,"mtime":1612028342129,"results":"31","hashOfConfig":"18"},{"size":1284,"mtime":1612191204753,"results":"32","hashOfConfig":"18"},{"size":1712,"mtime":1612028893280,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"i34wwy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\reportWebVitals.js",[],["77","78"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\App.js",["79"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\index.js",[],["80","81"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Login.js",[],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\crypto.js",["82"],"const crypt = require(\"crypto-js\")\r\nconst filemanager = require(\"fs\")\r\nconst sysinfo = require(\"systeminformation\")\r\n\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\n\r\nclass AppData {\r\n    constructor(raw) {\r\n        this.username = this.password = this.pearlURL = undefined\r\n        let octet = \"\"\r\n        let buffer = \"\"\r\n        let index = 0\r\n\r\n        for (let c of raw) {\r\n            octet += c\r\n            if (octet.length === 8 && octet !== \"10011101\") {\r\n                buffer += String.fromCharCode(parseInt(octet, 2))\r\n                octet = \"\"\r\n            } else if (octet === \"10011101\") {\r\n                switch (index) {\r\n                    case 0:\r\n                        this.username = buffer\r\n                        break\r\n                    case 1:\r\n                        this.password = buffer\r\n                        break\r\n                    case 2:\r\n                        this.pearlURL = buffer\r\n                        break\r\n                    default:\r\n                        break\r\n                }\r\n                buffer = \"\"\r\n                octet = \"\"\r\n                index += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    getRaw() {\r\n        if (typeof (this.username) == \"string\" && typeof (this.password) == \"string\" && typeof (this.pearlURL) == \"string\") {\r\n            let buffer = \"\"\r\n            for (let i of this.username) {\r\n                if (i === undefined) continue;\r\n                let result = parseInt(i.charCodeAt(0)).toString(2)\r\n                while (result.length < 8) {\r\n                    result = \"0\" + result\r\n                }\r\n                buffer += result\r\n            }\r\n            buffer += \"10011101\"\r\n            for (let i of this.password) {\r\n                if (i === undefined) continue;\r\n                let result = parseInt(i.charCodeAt(0)).toString(2)\r\n                while (result.length < 8) {\r\n                    result = \"0\" + result\r\n                }\r\n                buffer += result\r\n            }\r\n            buffer += \"10011101\"\r\n            for (let i of this.pearlURL) {\r\n                if (i === undefined) continue;\r\n                let result = parseInt(i.charCodeAt(0)).toString(2)\r\n                while (result.length < 8) {\r\n                    result = \"0\" + result\r\n                }\r\n                buffer += result\r\n            }\r\n            buffer += \"10011101\"\r\n            return buffer\r\n        } else {\r\n            return \"0\"\r\n        }\r\n    }\r\n}\r\n\r\nclass SelfCrypto {\r\n    static getDirectoryData() {\r\n        return (electron.app || electron.remote.app).getPath(\"userData\")\r\n        // return (remote.process.env.APPDATA || (remote.process.platform === 'darwin' ? remote.process.env.HOME + '/Library/Preferences' : remote.process.env.HOME + \"/.local/share\")) + \"/ConfinementGUI\"\r\n    }\r\n\r\n    static data = undefined\r\n\r\n    static getKey(callback) {\r\n        sysinfo.baseboard().then((data) => {\r\n            sysinfo.system().then(dt2 => {\r\n                callback(data.serial + dt2.serial + dt2.uuid)\r\n            })\r\n        })\r\n    }\r\n\r\n    static __init__(callback) {\r\n        let directory = this.getDirectoryData()\r\n        if (!filemanager.existsSync(directory)) {\r\n            filemanager.mkdirSync(directory)\r\n        }\r\n        let fpath = directory + \"/data.dcrypt\"\r\n        if (!filemanager.existsSync(fpath)) {\r\n            let stream = filemanager.createWriteStream(fpath)\r\n            stream.end()\r\n            callback()\r\n        } else {\r\n            let data = filemanager.readFileSync(fpath, \"utf8\")\r\n            \r\n            if (data.length > 16) {\r\n                this.getKey((key)=>{\r\n                    let decrypted = crypt.AES.decrypt(data,key)\r\n                    if (decrypted.toString(crypt.enc.Utf8).indexOf(\"10011101\")) {\r\n                        SelfCrypto.data = new AppData(decrypted.toString(crypt.enc.Utf8))\r\n                    }\r\n                    callback()\r\n                })\r\n            }else{\r\n                callback()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    static saveDate(){\r\n    let directory = this.getDirectoryData()\r\n    let fpath = directory + \"/data.dcrypt\"\r\n    if (SelfCrypto.data !== undefined) {\r\n        let dat = SelfCrypto.data.getRaw()\r\n        this.getKey((key) => {\r\n            dat = crypt.AES.encrypt(dat, key)\r\n            dat = dat.toString()\r\n            filemanager.writeFileSync(fpath, dat, { encoding: \"utf8\" })\r\n        })\r\n\r\n    }\r\n}\r\n    \r\n    static isFile(){\r\n    return SelfCrypto.data === undefined\r\n}\r\n}\r\n\r\nexport { SelfCrypto, AppData };",["83","84"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\ed-api.js",["85"],"const { x64 } = require('crypto-js');\r\nconst filemanager = require(\"fs\")\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\nconst {dialog} = remote\r\n\r\nconst urllib = require(\"urllib\")\r\n\r\nconst API_URL = \"https://api.ecoledirecte.com/v3/\"\r\nconst ED_URL = {\r\n    login: {\r\n        url:\"login.awp\",\r\n        method: \"post\"\r\n    },\r\n    homework: {\r\n        url:\"Eleves/:eleveid:/cahierdetexte/:date:.awp?verbe=get&\",\r\n        method: \"post\"\r\n    },\r\n    downloadFile : {\r\n        url : \"telechargement.awp?verbe=get&\",\r\n        method: \"post\"\r\n    }\r\n}\r\n\r\nclass ED_Instance{\r\n    constructor(data, usern, pass){\r\n        this.token = data.token\r\n        this.username = usern\r\n        this.password = pass\r\n        this.user_data = data.data.accounts[0]\r\n        this.raw_data = data\r\n    }\r\n\r\n    getPearltreesURL(){\r\n        for(let module of this.user_data.modules){\r\n            if (module.code === \"PEARLTREES\"){\r\n                return module.params.urlPearlTrees\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    async downloadHomeworkFile(filedata, callback){\r\n        let directoryData = (electron.app || electron.remote.app).getPath(\"userData\") + \"/EDFiles\"\r\n        // console.log(\"Requested!\")\r\n        if(!filemanager.existsSync(directoryData)){\r\n            filemanager.mkdirSync(directoryData)\r\n        }\r\n        let file_path = directoryData + \"/\" + encodeURI(filedata[\"nom\"])\r\n        if(!filemanager.existsSync(file_path)){\r\n            let data = \"leTypeDeFichier=\" + filedata[\"type\"].toString() + \"&fichierId=\" + filedata[\"id\"] + \"&token=\" + this.token + \"&anneeMessages=\"\r\n            urllib.request(API_URL + ED_URL.downloadFile.url, {\r\n                method: ED_URL.downloadFile.method,\r\n                content: data,\r\n                headers:{\r\n                    \"content-type\":\"application/x-www-form-urlencoded\"\r\n                }\r\n            }, (err, data, res)=>{\r\n                if(res.statusCode === 200){\r\n                    filemanager.writeFileSync(file_path, data)\r\n                }\r\n                callback(res.statusCode)\r\n                \r\n            })\r\n        }else{\r\n            callback(200)\r\n        }\r\n    }\r\n\r\n    async getHomeWorkByDate(date, callback){\r\n        let day = date.getDate()\r\n        day = day < 10 ? \"0\" + day.toString() : day.toString()\r\n        let month = date.getMonth() + 1\r\n        month = month < 10 ? \"0\" + month.toString() : month.toString()\r\n        let year = date.getFullYear()\r\n        let str_date = String(year) + \"-\" + String(month) + \"-\" + String(day)\r\n        console.log(API_URL + ED_URL.homework.url.replace(\":eleveid:\", this.user_data[\"id\"]).replace(\":date:\", str_date))\r\n        // console.log(\"data={\\\"token\\\":\\\"\" + this.token+\"\\\"}\")\r\n        await urllib.request(API_URL + ED_URL.homework.url.replace(\":eleveid:\", this.user_data[\"id\"]).replace(\":date:\", str_date),{\r\n            method: ED_URL.homework.method,\r\n            content:\"data={\\\"token\\\":\\\"\" + this.token+\"\\\"}\",\r\n            headers:{\r\n                \"content-type\":\"application/x-www-form-urlencoded\"\r\n            },\r\n            dataType:\"json\"\r\n        }, (err, data, res)=>{\r\n            // console.log(data)\r\n            if(err || data.code === 525){\r\n                login(this.username, this.password, (result)=>{\r\n                    if(typeof result === undefined){\r\n                        remote.app.quit()\r\n                    }else{\r\n                        this.user_data = result.user_data\r\n                        this.token = result.token\r\n                        this.getHomeWorkByDate(date, callback)\r\n                    }\r\n                })\r\n            }else{\r\n                callback(data.data)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nasync function login(username, password, callback){\r\n    await urllib.request(API_URL + ED_URL.login.url, {\r\n        method:ED_URL.login.method,\r\n        content:\"data={\\\"identifiant\\\":\\\"\"+username+\"\\\",\\\"motdepasse\\\":\\\"\"+password+\"\\\"}\",\r\n        headers:{\r\n            \"content-type\":\"application/x-www-form-urlencoded\"\r\n        },\r\n        dataType: \"json\"\r\n    }, (err, data, res)=>{\r\n        if(err|| data.code === 505){\r\n            dialog.showMessageBoxSync({\r\n                type:\"warning\",\r\n                buttons:[\"Ok\"],\r\n                defaultId:0,\r\n                title:\"Erreur\",\r\n                message:data.message,\r\n                noLink:true\r\n            })\r\n            callback(undefined)\r\n        }else{\r\n            callback(new ED_Instance(data, username, password))\r\n        }\r\n    })\r\n}\r\n\r\nmodule.exports = {ED_Instance, login}","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menu.js",["86"],"import \"./Menu.css\"\r\nimport \"./composants Menu/BarreNav.css\"\r\nimport \"./Menus/EDFiles.css\"\r\nimport EDFiles from \"./Menus/EDFiles\"\r\nimport React from 'react';\r\nimport BarreNav from \"./composants Menu/BarreNav\"\r\nconst electron = require('electron');\r\nconst ipcRender = electron.ipcRenderer\r\nconst remote = electron.remote\r\n\r\nconst {dialog} = remote\r\n\r\nclass Menu extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.ed_inst = props.ed_inst\r\n        this.menus = {\r\n            F_ED: <EDFiles user={this.ed_inst.user_data} />\r\n        }\r\n        this.state = {\r\n            menu: null\r\n        }\r\n        console.log(this.ed_inst)\r\n        ipcRender.send(\"run-remote-download\", {\r\n            edinstance: this.ed_inst\r\n        })\r\n\r\n        this.onChangeMenu = this.onChangeMenu.bind(this)\r\n    }\r\n\r\n    onChangeMenu(menu){\r\n        if(Object.keys(this.menus).includes(menu)){\r\n            this.setState({\r\n                menu: this.menus[menu]\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n             <BarreNav name={this.ed_inst.user_data.prenom + \" \" + this.ed_inst.user_data.nom} liftup={this.onChangeMenu}/>\r\n             <div className=\"MenuDisplayer\">\r\n                 {this.state.menu}\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Loading.js",[],["87","88"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\composants Menu\\BarreNav.js",["89"],"import React from 'react';\r\nimport \"./BarreNav.css\"\r\nimport MenuButton from \"./MenuButton\"\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\n\r\nclass BarreNav extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.name = props.name\r\n        this.state = {\r\n            menu:\"F_ED\"\r\n        }\r\n        this.menuSelectedCallback = this.props.liftup\r\n        this.menus = {}\r\n        this.OnClickMenuHandler = this.OnClickMenuHandler.bind(this)\r\n        this.OnMenuChange = this.OnMenuChange.bind(this)\r\n    }\r\n\r\n    OnMenuChange(){\r\n        this.menuSelectedCallback(this.state.menu)\r\n    }\r\n\r\n    OnClickMenuHandler(el){\r\n        if(Object.keys(this.menus).includes(this.state.menu)){\r\n            this.menus[this.state.menu].setActivated(true)\r\n        }\r\n        this.menus[el].setActivated(false)\r\n        this.setState({\r\n            menu:el\r\n        })\r\n        this.OnMenuChange()\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.menus[this.state.menu].setActivated(false)\r\n        this.OnMenuChange()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"NavBar\">\r\n                <div className=\"Etiquette\">{this.name}</div>\r\n                <div className=\"ButCont\">\r\n                    <MenuButton ETitle=\"Fichiers ED\" callBackClick={this.OnClickMenuHandler} ref={(rf) => this.menus[\"F_ED\"] = rf} ECallBackArg=\"F_ED\"/>\r\n                    <MenuButton ETitle=\"Fichiers PearlTrees\" callBackClick={this.OnClickMenuHandler} ref={(rf) => this.menus[\"F_PT\"] = rf} ECallBackArg=\"F_PT\"/>\r\n                    <MenuButton ETitle=\"Agenda\" callBackClick={this.OnClickMenuHandler} ref={(rf) => this.menus[\"AGND\"] = rf} ECallBackArg=\"AGND\"/>\r\n                    <MenuButton ETitle=\"Planning\" callBackClick={this.OnClickMenuHandler} ref={(rf) => this.menus[\"PLAN\"] = rf} ECallBackArg=\"PLAN\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarreNav;","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\composants Menu\\MenuButton.js",["90"],"import React from 'react';\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\n\r\nclass MenuButton extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.title = props.ETitle\r\n\r\n        this.myref = React.createRef()\r\n    }\r\n    \r\n    setActivated(st){\r\n        this.myref.current.disabled = !st\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <input type=\"button\" onClick={() => {this.props.callBackClick(this.props.ECallBackArg)}} className=\"MenuButton\" ref={this.myref} value={this.title}></input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuButton;","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\EDFiles.js",["91","92","93"],"import React from 'react';\r\nimport DataRangeSelector from \"./DateRangeSelector\"\r\nimport Storage from \"../Storage\"\r\nimport MatiereFiles from \"./edFilesComp/MatiereFiles\"\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\nconst {ipcRenderer} = electron\r\n\r\nclass EDFiles extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.userdata = props.user\r\n        this.state = {\r\n            files:{},\r\n            submenu: undefined\r\n        }\r\n        this.backup = \"\"\r\n        this.list_f = \"\"\r\n        this.menus = {}\r\n\r\n        this.onMenuClick = this.onMenuClick.bind(this)\r\n        this.getBackOnclick = this.getBackOnclick.bind(this)\r\n    }\r\n\r\n    getBackOnclick(){\r\n        this.list_f =this.backup\r\n        this.setState({\r\n            submenu: undefined\r\n        })\r\n    }\r\n\r\n    onMenuClick(menu){\r\n        let selectedFiles =this.menus[menu.target.innerText]\r\n        this.backup = this.list_f\r\n        this.list_f = <MatiereFiles files={selectedFiles} callback={this.getBackOnclick} matiere={menu.target.innerText}/>\r\n        this.setState({\r\n            submenu: menu\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        ipcRenderer.on(\"take-edfiles\", (event, args)=>{\r\n            if(args.length === 0){\r\n                this.list_f = <div className=\"NoFile\">Aucun fichier</div>\r\n            }else{\r\n                this.menus = {}\r\n                this.list_f = \"\"\r\n                for (let file of args){\r\n                    if(!Object.keys(this.menus).includes(file[\"matiere\"])){\r\n                        this.menus[file[\"matiere\"]] = []\r\n                    }\r\n                    if(!this.menus[file[\"matiere\"]].includes(file)){\r\n                        this.menus[file[\"matiere\"]].push(file)\r\n                    }\r\n                }\r\n                this.list_f = Object.keys(this.menus).map((key)=>{\r\n                    return <div className=\"MatiereButton\" onClick={this.onMenuClick} key={key}>{key}</div>\r\n                })\r\n            }\r\n            this.setState({\r\n                files: args\r\n            })\r\n        })\r\n        ipcRenderer.send(\"get-edfiles\", {})\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        ipcRenderer.removeAllListeners(\"take-edfiles\")\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"EDFiles\">\r\n               <div className=\"Barrnav\">\r\n                   {/* <div className=\"Titre\">Fichiers Ecole directe</div> */}\r\n                   <div className=\"Reload\">Recharger</div>\r\n               </div>\r\n               <div className=\"AllFiles\">\r\n                    {this.list_f}\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EDFiles;","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Storage.js",[],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\DateRangeSelector.js",["94"],"import React from 'react';\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nconst electron = require('electron');\r\nconst remote = electron.remote\r\n\r\nclass DateRangeSelector extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.now = new Date()\r\n        let year = this.now.getFullYear()\r\n        if (this.now.getMonth() < 8){\r\n            year -= 1\r\n        }\r\n\r\n        this.state = {\r\n            startDate: new Date(year, 8, 1),\r\n            endDate: new Date()\r\n        } \r\n        this.onDateChange = this.onDateChange.bind(this)\r\n    }\r\n\r\n    onDateChange(date){\r\n        this.setState({\r\n            startDate: date[0],\r\n            endDate: date[1]\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <DatePicker selected={this.state.startDate} onChange={this.onDateChange} startDate={this.state.startDate} endDate={this.state.endDate} selectsRange inline/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default DateRangeSelector;","C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\MatiereFiles.js",["95","96"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\FileBarre.js",["97","98"],"C:\\Users\\David\\Documents\\Projet Dir\\Node.js Proj\\ConfinementManager\\confinementgui\\src\\Menus\\edFilesComp\\DateContainerFiles.js",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":13,"column":9,"nodeType":"107","messageId":"108","endLine":13,"endColumn":22},{"ruleId":"101","replacedBy":"109"},{"ruleId":"103","replacedBy":"110"},{"ruleId":"105","severity":1,"message":"111","line":6,"column":7,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"101","replacedBy":"112"},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":9,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"115","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":14},{"ruleId":"101","replacedBy":"116"},{"ruleId":"103","replacedBy":"117"},{"ruleId":"105","severity":1,"message":"111","line":5,"column":7,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"111","line":3,"column":7,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"118","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":25},{"ruleId":"105","severity":1,"message":"119","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":15},{"ruleId":"105","severity":1,"message":"111","line":6,"column":7,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"111","line":5,"column":7,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"111","line":4,"column":7,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"120","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":19},{"ruleId":"105","severity":1,"message":"111","line":5,"column":7,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"120","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":19},{"ruleId":"105","severity":1,"message":"111","line":4,"column":7,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"120","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":19},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'BrowserWindow' is assigned a value but never used.","Identifier","unusedVar",["121"],["122"],"'remote' is assigned a value but never used.",["121"],["122"],"'x64' is assigned a value but never used.","'dialog' is assigned a value but never used.",["121"],["122"],"'DataRangeSelector' is defined but never used.","'Storage' is defined but never used.","'ipcRenderer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]